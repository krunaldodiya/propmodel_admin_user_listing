services:
  app:
    build:
      context: .
      target: development
    ports:
      - "${PORT}:${PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app:delegated
      - node_modules:/usr/src/app/node_modules
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        until nc -z postgres 5432; do
          sleep 1
        done &&
        echo 'PostgreSQL started' &&
        npm run migrate &&
        echo 'Starting development server...' &&
        npm run dev
      "
    stdin_open: true
    tty: true

  postgres:
    image: postgres:16-alpine
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  node_modules:
